# BrainInk Teacher Dashboard - Docker Compose
version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: brainink-teacher-db
    environment:
      POSTGRES_DB: brainink_teacher
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password123}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./teacher-backend/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: brainink-teacher-redis
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Teacher Backend API
  teacher-backend:
    build:
      context: ./teacher-backend
      dockerfile: Dockerfile
    container_name: brainink-teacher-api
    environment:
      DATABASE_URL: postgresql://postgres:${POSTGRES_PASSWORD:-password123}@postgres:5432/brainink_teacher
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key}
      KANA_API_URL: ${KANA_API_URL:-https://kana-backend-app.onrender.com}
      OCR_SERVICE_URL: http://ocr-service:8001
      GOOGLE_API_KEY: ${GOOGLE_API_KEY}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      DEBUG: ${DEBUG:-false}
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    volumes:
      - ./teacher-backend/uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # OCR Microservice
  ocr-service:
    build:
      context: ./teacher-ocr-service
      dockerfile: Dockerfile
    container_name: brainink-ocr-service
    environment:
      KANA_API_URL: ${KANA_API_URL:-https://kana-backend-app.onrender.com}
      GOOGLE_API_KEY: ${GOOGLE_API_KEY}
      MAX_FILE_SIZE: 10485760  # 10MB
    ports:
      - "${OCR_PORT:-8001}:8001"
    volumes:
      - ./teacher-ocr-service/uploads:/app/uploads
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend (for production)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
      args:
        VITE_TEACHER_API_URL: http://localhost:${BACKEND_PORT:-8000}
    container_name: brainink-teacher-frontend
    ports:
      - "${FRONTEND_PORT:-3000}:80"
    depends_on:
      - teacher-backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Load Balancer (optional)
  nginx:
    image: nginx:alpine
    container_name: brainink-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - teacher-backend
    restart: unless-stopped
    profiles:
      - production

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  default:
    name: brainink-teacher-network
